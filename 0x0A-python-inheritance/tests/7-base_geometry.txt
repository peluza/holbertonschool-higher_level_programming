7-base_geometry

Import module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Class:
writhe a class BaseGeometry the case

Operations:
the intenger validator

test #0: intenger validator
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("my_int", 12)

test #1: intenger validator
        >>> bg.integer_validator("width", 89)


test #2: intenger validator
        >>> bg.integer_validator("name", "John")
        Traceback (most recent call last):
        TypeError: name must be an integer

test #3: intenger validator
        >>> bg.integer_validator("age", 0)
        Traceback (most recent call last):
        ValueError: age must be greater than 0

test #4: intenger validator
        >>> bg.integer_validator("distance", -4)
        Traceback (most recent call last):
        ValueError: distance must be greater than 0

test #5: intenger validator
        >>> bg.integer_validator("distance", 4.3)
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #6: intenger validator
        >>> bg.integer_validator("distance", -4.3)
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #7: intenger validator
        >>> bg.integer_validator("distance", 94752458914057235740)


test #8: intenger validator
        >>> bg.area()
        Traceback (most recent call last):
        Exception: area() is not implemented

test #9: intenger validator
        >>> bg.integer_validator("distance", (4, 4))
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #10: intenger validator
        >>> bg.integer_validator("distance", [4, 4])
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #11: intenger validator
        >>> bg.integer_validator("distance", {4,4})
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #12: intenger validator        
        >>> bg.integer_validator("distance", None)
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #13: intenger validator
        >>> bg.integer_validator("distance", True)
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #14: intenger validator
        >>> bg.integer_validator("distance", False)
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #15: intenger validator
        >>> bg.integer_validator("distance", {4: 4})
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #16: intenger validator
        >>> bg.integer_validator("", 3)


test #17: intenger validator
        >>> bg.integer_validator()
        Traceback (most recent call last):
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

test #18: intenger validator        
        >>> bg.integer_validator("distance", (1, ))
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #19: intenger validator
        >>> bg.integer_validator(1, 1)


test #20: intenger validator
        >>> bg.integer_validator("distance", [4])
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #21: intenger validator
        >>> bg.integer_validator("distance", {4, 3})
        Traceback (most recent call last):
        TypeError: distance must be an integer

test #22: intenger validator
        >>> bg.integer_validator("name", "str")
        Traceback (most recent call last):
        TypeError: name must be an integer

test #23: intenger validator        
        >>> bg.integer_validator("distance", {4})
        Traceback (most recent call last):
        TypeError: distance must be an integer